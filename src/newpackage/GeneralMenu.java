/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.time.temporal.ChronoUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Yuyutsu Poudel
 */
public class GeneralMenu extends javax.swing.JFrame {

    /**
     * Creates new form GeneralMenu
     */
    public GeneralMenu() {
        initComponents();
        live();
        roomlive();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(255, 204, 102));
        jTabbedPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 153), 1, true));

        jPanel5.setBackground(new java.awt.Color(255, 204, 153));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 153), 3, true));
        jPanel5.setForeground(new java.awt.Color(255, 204, 102));

        jPanel7.setBackground(new java.awt.Color(204, 255, 255));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 153), 3, true));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("BHARATPUR HOTEL MANAGEMENT SYSTEM");

        jButton1.setText("LogOut");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("ReFIll");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(153, 153, 255));
        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        jLabel2.setText("Please add constumer details:");

        jLabel3.setText("Name:");

        jLabel4.setText("Address:");

        jLabel5.setText("Phone:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(99, 99, 99)
                                .addComponent(jTextField1))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(83, 83, 83)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField2))))))
                .addGap(29, 29, 29))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(153, 153, 255));
        jPanel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        jPanel9.setPreferredSize(new java.awt.Dimension(543, 172));

        jLabel6.setText("Check In:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020", "2021", "2022", "2023" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "07", "08", "09", "10", "11", "12" }));

        jLabel7.setText("Days:");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel8.setText("Room Type:");

        jCheckBox1.setText("Reservation");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addGap(35, 35, 35)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox1))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jCheckBox1))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 40, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(190, 190, 190)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(20, 20, 20))
        );

        jTable2 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Room No", "Room Type", "Room Price", "Room Status"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("    Add New      ", jPanel3);

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 153), 3, true));

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153), 3));
        jPanel1.setPreferredSize(new java.awt.Dimension(425, 480));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("BHARATPUR HOTEL MANAGEMENT  SYSTEM");
        jLabel10.setToolTipText("");

        jLabel11.setText("Enter only one value at a time:");

        jButton5.setText("Reset");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(102, 204, 255));
        jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        jLabel12.setText("Name:");

        jLabel13.setText("Phone No:");

        jLabel14.setText("Room No:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(60, 60, 60)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField9)
                    .addComponent(jTextField7)
                    .addComponent(jTextField8))
                .addGap(36, 36, 36))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(48, 48, 48))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addGap(46, 46, 46))
        );

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Room No", "Name", "Check In", "Check Out", "Phone", "Status", "Bill"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton7.setText("Get Details");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Checkin");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Checkout");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jButton7)
                        .addGap(99, 99, 99)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton7))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("     Search     ", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // Check Out
        int selectedid = id;
        id=0;
        String selectedstatus =status;
        if(selectedid == 0){
            JOptionPane.showMessageDialog(rootPane,"Please select a row from table for checkout");
        }
        else if("Booked".equals(selectedstatus) && selectedid !=0){
            //checkout process
            try {
                // TODO add your handling code here:
                String sql = "SELECT `id`, `rno`, `rtype`, `name`, `add`, `phone`, `checkin`, `nod`, `checkout`, `Status`,`bill` FROM `cost_live` WHERE id =? ";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conc= DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                PreparedStatement ps = conc.prepareStatement(sql);
                ps.setInt(1,selectedid);
                ResultSet rs = ps.executeQuery();
                int rno = 0;
                int id2 = 0;
                String rtype =("");
                String name=("");
                String add=("");
                long phone=0;
                String checkin="";
                int nod=0;
                String checkout="";
                int bill = 0;
                while (rs.next()){
                    id2 = rs.getInt("id");
                    rno = rs.getInt("rno");
                    rtype = rs.getString("rtype");
                    name = rs.getString("name");
                    add = rs.getString("add");
                    phone = rs.getLong("phone");
                    checkin = rs.getString("checkin");
                    nod = rs.getInt("nod");
                    checkout = rs.getString("checkout");
                    bill = rs.getInt("bill");
                }
                // TODO add your handling code here:
                //moving data from temp to constumer
                String sql2 = "INSERT INTO `costumer`(`checkin`, `checkout`, `nod`, `rno`, `rtype`, `name`, `address`, `phoneno`,`bill`) VALUES (?,?,?,?,?,?,?,?,?)";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conc2= DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                PreparedStatement ps2 = conc2.prepareStatement(sql2);
                ps2.setString(1,checkin);
                ps2.setString(2,checkout);
                ps2.setInt(3,nod);
                ps2.setInt(4,rno);
                ps2.setString(5, rtype);
                ps2.setString(6, name);
                ps2.setString(7, add);
                ps2.setLong(8, phone);
                ps2.setInt(9,bill);
                int i = ps2.executeUpdate();
                //removing checked out data from live constumer table
                String sql3 = "DELETE FROM `cost_live` WHERE id = ?";
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                PreparedStatement ps3 = con.prepareStatement(sql3);
                ps3.setInt(1,selectedid);
                int i2 = ps3.executeUpdate();       //returns number of rows affected by prepare statement
                if (i2 > 0) {
                    JOptionPane.showMessageDialog(rootPane, "Room are clear to use.");
                    JOptionPane.showMessageDialog(rootPane, "BHARATPUR HOTEL MANAGEMENT SYSTEM\n\n\n        Costumer id              : "+id2+"\n        Costumer Name        : "+name+"\n        Costumer room         : "+rno+"\n\nTotal Billing amount  : Rs. "+bill+" Only.");
                }

            }
            catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Please select a row with 'booked' status for checkout.");
        }
        live();
        refill();
        roomlive();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // Check in
        int selectedid =id;
        id=0;
        String selectedstatus = status;
        int selectedrno = rno;
        //checking if room is currectly booked or not
        if(selectedid == 0){
            JOptionPane.showMessageDialog(rootPane,"Please select a row from table for checkin.");
        }
        else if("Reserved".equals(selectedstatus) && selectedid !=0){
            //checkin process
            try {
                // TODO add your handling code here:
                //checking if room is currectly booked or not
                String sql = "SELECT `id` FROM `cost_live` WHERE `rno` =? and `Status`=?";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conc= DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                PreparedStatement ps = conc.prepareStatement(sql);
                ps.setInt(1,selectedrno);
                ps.setString(2,"Booked");
                ResultSet i = ps.executeQuery();
                int id =0;
                while(i.next()){
                    id = i.getInt("id");

                }
                if(id!=0){
                    JOptionPane.showMessageDialog(rootPane,"Selected room is currectly booked by id number ( "+id+" ). Checkin service only be done if room is empty.");
                }
                else{
                    String sql3 = "UPDATE `cost_live` SET `Status`=\"Booked\" WHERE `id`=?";
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                    PreparedStatement ps3 = con.prepareStatement(sql3);
                    ps3.setInt(1,selectedid);
                    int i2 = ps3.executeUpdate();       //returns number of rows affected by prepare statement
                    if (i2 > 0) {
                        JOptionPane.showMessageDialog(rootPane, "Checkin Complete.");
                        id=0;
                    }
                }
            }
            catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Please select a row with 'Reserved' status for checkin.");
        }
        live();
        refill();
        roomlive();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int selectedid =id;     
        if(selectedid == 0){
            JOptionPane.showMessageDialog(rootPane,"Please select a row from table for checkin.");
        }
        else{
            try {
                // TODO add your handling code here:
                String sql = "SELECT `id`, `rno`, `rtype`, `name`, `add`, `phone`, `checkin`, `nod`, `checkout`, `Status`,`bill` FROM `cost_live` WHERE id =? ";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conc= DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                PreparedStatement ps = conc.prepareStatement(sql);
                ps.setInt(1,selectedid);
                ResultSet rs = ps.executeQuery();
                int rno = 0;
                int id2 = 0;
                String rtype =("");
                String name=("");
                String add=("");
                long phone=0;
                String checkin="";
                int nod=0;
                String checkout="";
                int bill = 0;
                while (rs.next()){
                    id2 = rs.getInt("id");
                    rno = rs.getInt("rno");
                    rtype = rs.getString("rtype");
                    name = rs.getString("name");
                    add = rs.getString("add");
                    phone = rs.getLong("phone");
                    checkin = rs.getString("checkin");
                    nod = rs.getInt("nod");
                    checkout = rs.getString("checkout");
                    bill = rs.getInt("bill");
                }
                JOptionPane.showMessageDialog(rootPane,"BHARATPUR HOTEL MANAGEMENT SYSTEM\n\n\n        Costumer id              :     "+id2+"\n        Costumer Name        :     "+name+"\n        Costumer room         :     "+rno+"\n        Room Type                :     "+ rtype +"\n        Address                    :     "+ add +"\n        Phone                       :     "+ phone +"\n        CheckIn                    :     "+ checkin +"\n        Number of days        :     "+nod+"\n        Checkout                  :     "+checkout+  "\n        Total Billing amount  :     Rs. "+bill+" Only.");
            } catch (ClassNotFoundException | SQLException ex) { 
                Logger.getLogger(GeneralMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        id = (int) model.getValueAt(selectedRowIndex,0);
        rno = (int) model.getValueAt(selectedRowIndex,1);
        status = (String) model.getValueAt(selectedRowIndex,6);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        if (!"".equals(jTextField7.getText()) && "".equals(jTextField8.getText()) && "".equals(jTextField9.getText()))
        {
            try {
                //search by name
                String name =jTextField7.getText();
                String sql1 = "SELECT `id`, `rno`,`name`, `checkin`,`checkout`,`phone`, `Status` FROM `cost_live` where name=?";
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                PreparedStatement ps = con.prepareStatement(sql1);
                ps.setString(1, name);
                ResultSet rs=ps.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                refill();

            } catch (ClassNotFoundException | SQLException ex) {

            }

        }
        else if ("".equals(jTextField7.getText()) && !"".equals(jTextField8.getText()) && "".equals(jTextField9.getText()))
        {
            try {
                //search by phone number
                try{Long phone = Long.parseLong(jTextField8.getText());
                    String sql1 = "SELECT `id`, `rno`,`name`, `checkin`,`checkout`,`phone`, `Status` FROM `cost_live` where phone=?";
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                    PreparedStatement ps = con.prepareStatement(sql1);
                    ps.setLong(1, phone);
                    ResultSet rs=ps.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    refill();
                }
                catch (NumberFormatException e){JOptionPane.showMessageDialog(rootPane,"Please enter number.");jTextField9.setText("");refill();}
            }
            catch (ClassNotFoundException | SQLException ex ){}
        }
        else if("".equals(jTextField7.getText()) && "".equals(jTextField8.getText()) && !"".equals(jTextField9.getText())){
            //search by room number
            try {
                try{int rno = Integer.parseInt(jTextField9.getText());
                    String sql1 = "SELECT `id`, `rno`,`name`, `checkin`,`checkout`,`phone`, `Status` FROM `cost_live` where rno=?";
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                    PreparedStatement ps = con.prepareStatement(sql1);
                    ps.setInt(1, rno);
                    ResultSet rs=ps.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    refill();
                }
                catch (NumberFormatException e){JOptionPane.showMessageDialog(rootPane,"Please enter number.");jTextField9.setText("");refill();}

            } catch (ClassNotFoundException | SQLException ex) {
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter one value at a time.");
            refill();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        refill();
        live();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        int selectedRowIndex = jTable2.getSelectedRow();
        selectedrno = (int) model.getValueAt(selectedRowIndex,0);
        selectedrtype = (String) model.getValueAt(selectedRowIndex,1);
        selectedrcon = (String) model.getValueAt(selectedRowIndex,3);
    }//GEN-LAST:event_jTable2MouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {
            //part1: Declearing variable
            String reqcon;
            if (jCheckBox1.isSelected()){
                reqcon = "Reserved";}
            else{
                reqcon = "Booked";}
            Boolean temp1;
            temp1 = false;
            Boolean temp2;
            temp2 = true;
            Boolean temp3;
            temp3 = true;
            Boolean temp4;
            temp4 = true;
            String name = jTextField1.getText();
            String address = jTextField2.getText();
            if("".equals(name) || "".equals(address)){
                temp3 = false;}
            long phone = 0;
            int days = 0;
            int rno = 0;
            String tcheckin = null;
            LocalDate checkin = null;
            LocalDate checkout = null;
            String rtype = null;
            String tcheckout = null;//string value of checkout
            int rprice = 0;
            int bill = 0;
            //part2: getting input data

            try {phone = Long.parseLong(jTextField3.getText());
                days = Integer.parseInt(jTextField5.getText());
                rno = selectedrno;
                String tday = jTextField4.getText();
                String tyear = jComboBox2.getSelectedItem().toString();
                String tmonth = jComboBox3.getSelectedItem().toString();
                tcheckin=(tyear+"-"+tmonth+"-"+tday);
                checkin = LocalDate.parse(tcheckin);
                rtype=selectedrtype;
                checkout = ChronoUnit.DAYS.addTo(checkin, days);
                tcheckout = String.valueOf(checkout);
            }
            catch (NumberFormatException e){temp3 = false;jTextField3.setText("");}
            catch (DateTimeParseException e){temp3 = false;jTextField4.setText("");}
            if(selectedrno==0){temp4 = false;}
            if("Booked".equals(selectedrcon) && "Booked".equals(reqcon) ){temp4 = false;}
            if(temp3==true){
                if(temp4 == true){
                    //calculating billing amount
                    String sql123 = "SELECT `rprice` FROM `room_status` WHERE `rno`=? ";
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection conc123= DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                    PreparedStatement ps123 = conc123.prepareStatement(sql123);
                    ps123.setInt(1,rno);
                    ResultSet rs123 = ps123.executeQuery();
                    while (rs123.next()){
                        rprice = rs123.getInt("rprice");
                    }
                    bill=rprice*days;
                    //part3: getting room type of selected room no
                    String sql = "SELECT `rtype` FROM `room_status` WHERE `rno`=(select `rno` from `room_status` where `rno`=?) ";
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection conc= DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                    PreparedStatement ps = conc.prepareStatement(sql);
                    ps.setInt(1,rno);
                    ResultSet rs = ps.executeQuery();
                    String rettype="";
                    while (rs.next()){
                        rettype = rs.getString("rtype");
                    }
                    //part4: checking if room type matches with requested room type or not
                    if(rettype.equals(rtype)){
                        String sql2 = "SELECT`checkin`,`checkout` FROM `cost_live` WHERE rno = ?";
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection conc2= DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                        PreparedStatement ps2 = conc2.prepareStatement(sql2);
                        ps2.setInt(1,rno);
                        ResultSet rs2 = ps2.executeQuery();
                        Date[] temcheckin = new Date[10];
                        Date[] temcheckout = new Date[10];
                        LocalDate retcheckin;
                        LocalDate retcheckout;
                        int i = 0,j;
                        while (rs2.next()){
                            temcheckin[i] = rs2.getDate("checkin");
                            temcheckout[i] = rs2.getDate("checkout");
                            i++;
                        }
                        if(temcheckin[0]==null){
                            temp1 = true;
                        }
                        else{
                            //part 5: checkes of room is avaiable for selected date period or not
                            for(j=0;j<i;j++){
                                retcheckin = temcheckin[j].toLocalDate() ;
                                retcheckout= temcheckout[j].toLocalDate();
                                //JOptionPane.showMessageDialog(rootPane, checkin +" "+retcheckin +" "+ checkout+ " "+ retcheckout);
                                if((checkin.isBefore(retcheckin) && checkout.isBefore(retcheckin)) || (checkin.isAfter(retcheckout) && checkout.isAfter(retcheckout)) ){
                                    temp1 = true;
                                }
                                else{temp2 = false;}
                            }
                        }
                        //part 6: adding new costumer
                        if (temp1 == true && temp2 == true ){
                            String sql23 = "INSERT INTO `cost_live` (`rno`,`rtype`,`name`, `add`, `phone`, `checkin`, `nod`, `checkout`,`Status`,`bill`) VALUES (?,?,?,?,?,?,?,?,?,?)";
                            Class.forName("com.mysql.jdbc.Driver");
                            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                            PreparedStatement ps23 = con.prepareStatement(sql23);
                            ps23.setInt(1, rno);
                            ps23.setString(2,rtype);
                            ps23.setString(3,name);
                            ps23.setString(4,address);
                            ps23.setLong(5,phone);
                            ps23.setString(6,tcheckin);
                            ps23.setInt(7, days);
                            ps23.setString(8, tcheckout);
                            ps23.setString(9, reqcon);
                            ps23.setInt(10, bill);
                            int k = ps23.executeUpdate();
                            if(k > 0) {JOptionPane.showMessageDialog(rootPane, "New costumer added.");refill();}
                            else{JOptionPane.showMessageDialog(rootPane,"Error. Please try again.");}
                        }
                        else{JOptionPane.showMessageDialog(rootPane, "Room not avaiable.");}

                    }
                    else{JOptionPane.showMessageDialog(rootPane, "Room not avaiable.");}
                }
                else{JOptionPane.showMessageDialog(rootPane, "Please Select room number without \"Booked\" status.");}
            }
            else{JOptionPane.showMessageDialog(rootPane, "Please check your input data.");}
        }

        catch (ClassNotFoundException | SQLException ex)
        {}
        live();
        roomlive();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        refill();
        live();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new Index().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
    private void refill(){
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
    }
    private void live(){
        try {
                //displays all avaiable live costumer data into jtable  
                String sql1 = "SELECT `id`, `rno`,`name`, `checkin`,`checkout`, `phone`,`Status`,`bill` FROM `cost_live` order by checkin ASC";
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                PreparedStatement ps = con.prepareStatement(sql1);
                ResultSet rs=ps.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));             
            } catch (ClassNotFoundException | SQLException ex) { }
    }
    private void roomlive(){
        try{
            //getting all room datails
                String sql2 = "SELECT * FROM `room_status` ORDER BY `rno` ASC";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conc2= DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
                PreparedStatement ps2 = conc2.prepareStatement(sql2);             
                ResultSet rs2 = ps2.executeQuery();
                int[] rno = new int[1000];
                String[] rcon = new String[1000];
                int[] rprice = new int[1000];
                int i = 0,j=0,k=0,l=0;
                while (rs2.next()){
                    rno[i] = rs2.getInt("rno");
                    rcon[i] = rs2.getString("rtype");
                    rprice[i] = rs2.getInt("rprice");
                    i++;
                }
            //checking which room is currectly booked
            String sql23 =("SELECT `rno`FROM `cost_live` WHERE `Status` = \"Booked\" ORDER BY `rno` ASC");
            Class.forName("com.mysql.jdbc.Driver");
            Connection conc23= DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");
            PreparedStatement ps23 = conc23.prepareStatement(sql23);
            ResultSet rs23 = ps23.executeQuery();
            int[] rno2 = new int[1000];
            while (rs23.next()){
                    rno2[j] = rs23.getInt("rno");
                    j++;                     
                }
            String[] status = new String[1000];
            l=0;
            for(k=0;k<i;k++){
                if(rno[k]==rno2[l]){
                    status[k]="Booked";
                    l++;
                }
                else{
                    status[k]="Empty";
                }
            }
            //for(k=0;k<i;k++){
            //    JOptionPane.showMessageDialog(rootPane,rno[k]+" " + rprice[k]+" "+ status[k]);
            //}
           for(k=0;k<i;k++){
               //JOptionPane.showMessageDialog(rootPane, rno[k]);
                jTable2.getModel().setValueAt(rno[k], k, 0);
                jTable2.getModel().setValueAt(rcon[k],k ,1); 
                jTable2.getModel().setValueAt(rprice[k], k,2); 
               jTable2.getModel().setValueAt(status[k], k,3); 
            }
        }
        catch(ClassNotFoundException | SQLException ex){}
    }    int id = 0;
    int rno = 0;
    String status;    int selectedrno = 0;
    String selectedrtype = "";
    String selectedrcon = "";
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneralMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneralMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneralMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneralMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneralMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
